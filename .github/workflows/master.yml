name: git-collab

on:
  push:
    branches:
      - master  

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Python package
        run: |
          cd nyapkg
          pip3 install setuptools wheel
          python setup.py sdist bdist_wheel
          cd ..
          
          cp nyapkg/dist/*.tar.gz ./

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: |
            nyapkg/dist/*.tar.gz
            *.tar.gz  

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Generate Cloudsmith API Key
        id: get_token
        env:
          CLOUDSMITH_SERVICE_SLUG: nyiservice-BjQf
          CLOUDSMITH_ORG: orgcs
        run: |
          oidc_token=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq '.value')

          api_key=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":$oidc_token, \"service_slug\":\"$CLOUDSMITH_SERVICE_SLUG\"}" https://api.cloudsmith.io/openid/$CLOUDSMITH_ORG/ | jq -r '.token')

          curl --request GET --url https://api.cloudsmith.io/v1/user/self/ --header "X-Api-Key:Bearer $token" --header 'accept: application/json'
  
          mkdir -p .cloudsmith_cache
          echo "$api_key" > .cloudsmith_cache/api-key
          echo "CLOUDSMITH_API_KEY=$api_key" >> $GITHUB_ENV

      - name: Cache API Key
        uses: actions/cache@v3
        with:
          path: .cloudsmith_cache
          key: cloudsmith-key-${{ github.run_id }}
          restore-keys: |
            cloudsmith-key-

  push:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Restore API Key Cache
        uses: actions/cache@v3
        with:
          path: .cloudsmith_cache
          key: cloudsmith-key-${{ github.run_id }}

      - name: Set API Key
        run: |
          echo "CLOUDSMITH_API_KEY=$(cat .cloudsmith_cache/api-key)" >> $GITHUB_ENV

      - name: Download Built Packages
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: packages

      - name: Push Packages to Cloudsmith
        uses: cloudsmith-io/action@v0.5.3
        with:
          api-key: ${{ env.CLOUDSMITH_API_KEY }}
          command: push
          format: python
          owner: orgcs
          repo: gharepo
          republish: true
          file: |
            packages/nyapkg-3.0.1.tar.gz

      - name: Push Packages to Cloudsmith
        uses: cloudsmith-io/action@v0.5.3
        with:
          api-key: ${{ env.CLOUDSMITH_API_KEY }}
          command: push
          format: python
          owner: orgcs
          repo: gharepo
          republish: true
          file: |
            packages/nyapkg-4.0.1.tar.gz      