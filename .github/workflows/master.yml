name: git-collab
on:
  push:
    branches:
      - master
  workflow_dispatch:      
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --index-url=https://dl.cloudsmith.io/${{ secrets.CLOUDSMITH_AUTH_TOKEN }}/${{ secrets.CLOUDSMITH_ORG }}/${{ secrets.CLOUDSMITH_REPO }}/python/simple/
      - name: Create a Python package
        run: |
          cd nyapkg
          pip3 install setuptools
          python setup.py sdist bdist_wheel
      - name: List package files
        run: ls -l nyapkg/dist/
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: nyapkg/dist/*.tar.gz
          retention-days: 1    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      CS_API_KEY: ${{ steps.get_token.outputs.CS_API_KEY }}
    env: 
      CLOUDSMITH_SERVICE_SLUG: nyiservice-BjQf	  
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Get OIDC token
        id: get_token
        run: |
          value=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq '.value')
          echo $value
          token=$(curl -X POST -H "Content-Type: application/json" -d "{\"oidc_token\":$value, \"service_slug\":\"$CLOUDSMITH_SERVICE_SLUG\"}" https://api.cloudsmith.io/openid/orgcs/ | jq -r '.token')
          echo $token
          curl --request GET --url https://api.cloudsmith.io/v1/user/self/ --header "X-Api-Key:Bearer $token" --header 'accept: application/json'

          # echo "::set-output name=CS_API_KEY::$token"
          echo "CLOUDSMITH_API_KEY=$token" >> $GITHUB_ENV

      - name: Login in Docker
        run: |
          docker login docker.cloudsmith.io -u "aayush-jha" -p "${{ secrets.CLOUDSMITH_API_KEY }}"
            
      - name: Pull Image (via Cloudsmith upstream cache)
        run: |
          docker pull docker.cloudsmith.io/orgcs/dockerrepo/redis/manifest/6.2.6
 
      - name: Cloudsmith CLI Setup
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.0
        with: 
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          oidc-namespace: "${{ secrets.CLOUDSMITH_ORG }}"
          oidc-service-slug: "${{ env.CLOUDSMITH_SERVICE_SLUG }}"
      - name: Checking the user details
        run: |
          cloudsmith whoami
  # push:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #     - name: Get a Repository
  #       uses: actions/checkout@v4
  #     - name: Push Static Package
  #       id: push-1
  #       uses: cloudsmith-io/action@v0.5.3
  #       with:
  #         api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
  #         command: "push"
  #         format: "python"
  #         owner: "${{ secrets.CLOUDSMITH_ORG }}"
  #         repo: "${{ secrets.CLOUDSMITH_REPO }}"
  #         republish: "true"
  #         file: "./*.tar.gz"
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: python-package
  #         path: dist
  #     - name: Push to Cloudsmith
  #       id: push-2
  #       uses: cloudsmith-io/action@v0.5.3
  #       with:
  #         api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
  #         command: "push"
  #         format: "python"
  #         owner: "${{ secrets.CLOUDSMITH_ORG }}"
  #         repo: "${{ secrets.CLOUDSMITH_REPO }}"
  #         file: "dist/*.tar.gz"
      
